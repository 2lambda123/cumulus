"use strict";(self.webpackChunk_cumulus_website=self.webpackChunk_cumulus_website||[]).push([[89002],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||l;return n?a.createElement(f,r(r({ref:t},u),{},{components:n})):a.createElement(f,r({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:o,r[1]=i;for(var c=2;c<l;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8902:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=n(87462),o=n(63366),l=(n(67294),n(3905)),r=["components"],i={id:"workflow-configuration-how-to",title:"Workflow Configuration How To's",hide_title:!1},p=void 0,c={unversionedId:"workflows/workflow-configuration-how-to",id:"version-v9.0.0/workflows/workflow-configuration-how-to",title:"Workflow Configuration How To's",description:"How to specify a bucket for granules",source:"@site/versioned_docs/version-v9.0.0/workflows/workflow-configuration-how-to.md",sourceDirName:"workflows",slug:"/workflows/workflow-configuration-how-to",permalink:"/cumulus/docs/v9.0.0/workflows/workflow-configuration-how-to",draft:!1,tags:[],version:"v9.0.0",lastUpdatedBy:"jennyhliu",lastUpdatedAt:1678406688,formattedLastUpdatedAt:"Mar 10, 2023",frontMatter:{id:"workflow-configuration-how-to",title:"Workflow Configuration How To's",hide_title:!1},sidebar:"docs",previous:{title:"Dockerizing Data Processing",permalink:"/cumulus/docs/v9.0.0/workflows/docker"},next:{title:"Contributing a Task",permalink:"/cumulus/docs/v9.0.0/adding-a-task"}},u={},d=[{value:"How to specify a bucket for granules",id:"how-to-specify-a-bucket-for-granules",level:2},{value:"Bucket configuration",id:"bucket-configuration",level:3},{value:"Point to buckets in the workflow configuration",id:"point-to-buckets-in-the-workflow-configuration",level:3},{value:"Hardcode a bucket",id:"hardcode-a-bucket",level:3},{value:"Using meta and hardcoding",id:"using-meta-and-hardcoding",level:3},{value:"How to specify a file location in a bucket",id:"how-to-specify-a-file-location-in-a-bucket",level:2},{value:"Hardcoding file placement",id:"hardcoding-file-placement",level:3},{value:"Using a template for file placement",id:"using-a-template-for-file-placement",level:3},{value:"Adding Metadata dates and times to the URL Path",id:"adding-metadata-dates-and-times-to-the-url-path",level:3}],s={toc:d},m="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,r);return(0,l.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"how-to-specify-a-bucket-for-granules"},"How to specify a bucket for granules"),(0,l.kt)("h3",{id:"bucket-configuration"},"Bucket configuration"),(0,l.kt)("p",null,"Buckets configured in your deployment for the ",(0,l.kt)("inlineCode",{parentName:"p"},"cumulus")," module's inputs will ultimately become part of the workflow configuration. The ",(0,l.kt)("inlineCode",{parentName:"p"},"type")," property of a bucket relies on the how that bucket will be used:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"public")," indicates a completely public bucket."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"internal")," type is for system use."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"protected")," buckets are for any information that should be behind an Earthdata Login authentication."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"private")," buckets are for private data.")),(0,l.kt)("p",null,"Consider the following ",(0,l.kt)("inlineCode",{parentName:"p"},"buckets")," configuration variable for the ",(0,l.kt)("inlineCode",{parentName:"p"},"cumulus")," module for all following examples:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tcl"},'buckets =  {\n  internal = {\n    name = "sample-internal-bucket",\n    type = "internal"\n  },\n  private = {\n    name = "sample-private-bucket",\n    type = "private"\n  },\n  protected = {\n    name = "sample-protected-bucket",\n    type = "protected"\n  },\n  public = {\n    name = "sample-public-bucket",\n    type = "public"\n  },\n  protected-2 = {\n    name = "sample-protected-bucket-2",\n    type = "protected"\n  }\n}\n')),(0,l.kt)("h3",{id:"point-to-buckets-in-the-workflow-configuration"},"Point to buckets in the workflow configuration"),(0,l.kt)("p",null,"Buckets specified in the ",(0,l.kt)("inlineCode",{parentName:"p"},"buckets")," input variable to the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nasa/cumulus/tree/master/tf-modules/cumulus"},(0,l.kt)("inlineCode",{parentName:"a"},"cumulus")," module")," will be available in the ",(0,l.kt)("inlineCode",{parentName:"p"},"meta")," object of the Cumulus message."),(0,l.kt)("p",null,"To use the buckets specified in the configuration, you can do the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "DiscoverGranules": {\n    "Parameters": {\n      "cma": {\n        "event.$": "$",\n        "task_config": {\n          "provider": "{$.meta.provider}",\n          "provider_path": "{$.meta.provider_path}",\n          "collection": "{$.meta.collection}",\n          "buckets": "{$.meta.buckets}"\n        }\n      }\n    }\n  }\n}\n')),(0,l.kt)("p",null,"Or, to map a specific bucket to a config value for a task:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "MoveGranules": {\n    "Parameters": {\n      "cma": {\n        "event.$": "$",\n        "task_config": {\n          "bucket": "{$.meta.buckets.internal.name}",\n          "buckets": "{$.meta.buckets}"\n        }\n      }\n    }\n  }\n}\n')),(0,l.kt)("h3",{id:"hardcode-a-bucket"},"Hardcode a bucket"),(0,l.kt)("p",null,"Bucket names can be hardcoded in your workflow configuration, for example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "DiscoverGranules": {\n    "Parameters": {\n      "cma": {\n        "event.$": "$",\n        "task_config": {\n          "provider": "{$.meta.provider}",\n          "provider_path": "{$.meta.provider_path}",\n          "collection": "{$.meta.collection}",\n          "buckets": {\n            "internal": "sample-internal-bucket",\n            "protected": "sample-protected-bucket-2"\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,l.kt)("p",null,"Or you can do a combination of meta buckets and hardcoded:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "DiscoverGranules": {\n    "Parameters": {\n      "cma": {\n        "event.$": "$",\n        "task_config": {\n          "provider": "{$.meta.provider}",\n          "provider_path": "{$.meta.provider_path}",\n          "collection": "{$.meta.collection}",\n          "buckets": {\n            "internal": "sample-internal-bucket",\n            "private": "{$.meta.buckets.private.name}"\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,l.kt)("h3",{id:"using-meta-and-hardcoding"},"Using meta and hardcoding"),(0,l.kt)("p",null,"Bucket names can be configured using a mixture of hardcoded values and values from the meta. For example, to configure the bucket based on the collection name you could do something like:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "DiscoverGranules": {\n    "Parameters": {\n      "cma": {\n        "event.$": "$",\n        "task_config": {\n          "provider": "{$.meta.provider}",\n          "provider_path": "{$.meta.provider_path}",\n          "collection": "{$.meta.collection}",\n          "buckets": {\n            "internal": "{$.meta.collection.name}-bucket"\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,l.kt)("h2",{id:"how-to-specify-a-file-location-in-a-bucket"},"How to specify a file location in a bucket"),(0,l.kt)("p",null,"Granule files can be placed in folders and subfolders in buckets for better organization. This is done by setting a ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path")," in the base level of a collection configuration to be applied to all files. To only affect placement of a single file, the ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path")," variable can be placed in that specific file of the collection configuration. There are a number of different ways to populate ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path"),"."),(0,l.kt)("h3",{id:"hardcoding-file-placement"},"Hardcoding file placement"),(0,l.kt)("p",null,"A file path can be added as the ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path")," in the collection configuration to specify the final location of the files. For example, take the following collection configuration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "MOD09GQ",\n  "version": "006",\n  "url_path": "example-path",\n  "files": [\n    {\n      "bucket": "protected",\n      "regex": "^MOD09GQ\\\\.A[\\\\d]{7}\\\\.[\\\\S]{6}\\\\.006\\\\.[\\\\d]{13}\\\\.hdf$",\n      "sampleFileName": "MOD09GQ.A2017025.h21v00.006.2017034065104.hdf",\n      "url_path": "file-example-path"\n    },\n    {\n      "bucket": "private",\n      "regex": "^MOD09GQ\\\\.A[\\\\d]{7}\\\\.[\\\\S]{6}\\\\.006\\\\.[\\\\d]{13}\\\\.hdf\\\\.met$",\n      "sampleFileName": "MOD09GQ.A2017025.h21v00.006.2017034065104.hdf.met"\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"The first file, ",(0,l.kt)("inlineCode",{parentName:"p"},"MOD09GQ.A2017025.h21v00.006.2017034065104.hdf")," has its own ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path")," so the resulting file path might look like ",(0,l.kt)("inlineCode",{parentName:"p"},"s3://sample-protected-bucket/file-example-path/MOD09GQ.A2017025.h21v00.006.2017034065104.hdf"),".\nThe second file, ",(0,l.kt)("inlineCode",{parentName:"p"},"MOD09GQ.A2017025.h21v00.006.2017034065104.hdf.met"),", does not have it's own ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path")," so it will use the collection ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path")," and have a final file path of ",(0,l.kt)("inlineCode",{parentName:"p"},"s3://sample-private-bucket/example-path/MOD09GQ.A2017025.h21v00.006.2017034065104.hdf.met"),"."),(0,l.kt)("h3",{id:"using-a-template-for-file-placement"},"Using a template for file placement"),(0,l.kt)("p",null,"Instead of hardcoding the placement, the ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path")," can be a template to be populated with metadata during the move-granules step. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"url_path": "{cmrMetadata.Granule.Collection.ShortName}"\n')),(0,l.kt)("p",null,"This url path with be assigned as the collection shortname, ",(0,l.kt)("inlineCode",{parentName:"p"},'"MOD09GQ"'),".\nTo take a subset of any given metadata, use the option ",(0,l.kt)("inlineCode",{parentName:"p"},"substring"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"url_path": "{cmrMetadata.Granule.Collection.ShortName}/{substring(file.name, 0, 3)}"\n')),(0,l.kt)("p",null,"This example will populate to ",(0,l.kt)("inlineCode",{parentName:"p"},'"MOD09GQ/MOD"')),(0,l.kt)("p",null,"Note: the move-granules step needs to be in the workflow for this template to be populated and the file moved. This ",(0,l.kt)("inlineCode",{parentName:"p"},"cmrMetadata")," or CMR granule XML needs to have been generated and stored on S3. From there any field could be retrieved and used for a url_path."),(0,l.kt)("h3",{id:"adding-metadata-dates-and-times-to-the-url-path"},"Adding Metadata dates and times to the URL Path"),(0,l.kt)("p",null,"There are a number of options to pull dates from the CMR file metadata. With this metadata:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<Granule>\n    <Temporal>\n        <RangeDateTime>\n            <BeginningDateTime>2003-02-19T00:00:00Z</BeginningDateTime>\n            <EndingDateTime>2003-02-19T23:59:59Z</EndingDateTime>\n        </RangeDateTime>\n    </Temporal>\n</Granule>\n")),(0,l.kt)("p",null,"The following examples of ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path")," could be used."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"{extractYear(cmrMetadata.Granule.Temporal.RangeDateTime.BeginningDateTime)}")," will pull the year from the full date: ",(0,l.kt)("inlineCode",{parentName:"p"},"2003"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"{extractMonth(cmrMetadata.Granule.Temporal.RangeDateTime.BeginningDateTime)}")," will pull the month: ",(0,l.kt)("inlineCode",{parentName:"p"},"2"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"{extractDate(cmrMetadata.Granule.Temporal.RangeDateTime.BeginningDateTime)}")," will pull the day: ",(0,l.kt)("inlineCode",{parentName:"p"},"19"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"{extractHour(cmrMetadata.Granule.Temporal.RangeDateTime.BeginningDateTime)}")," will pull the hour: ",(0,l.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,l.kt)("p",null,"Different values can be combined to create the ",(0,l.kt)("inlineCode",{parentName:"p"},"url_path"),". For example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n"bucket": "sample-protected-bucket",\n"name": "MOD09GQ.A2017025.h21v00.006.2017034065104.hdf",\n"url_path": "{cmrMetadata.Granule.Collection.ShortName}/{extractYear(cmrMetadata.Granule.Temporal.RangeDateTime.BeginningDateTime)/extractDate(cmrMetadata.Granule.Temporal.RangeDateTime.BeginningDateTime)}"\n}\n')),(0,l.kt)("p",null,"The final file location for the above would be ",(0,l.kt)("inlineCode",{parentName:"p"},"s3://sample-protected-bucket/MOD09GQ/2003/19/MOD09GQ.A2017025.h21v00.006.2017034065104.hdf"),"."))}f.isMDXComponent=!0}}]);